// JS的核心语法：编程-》逻辑
// 业务 -》 交互
// web编程 浏览器 方法
// 页面：img 文字 DOM 
// 底层：浏览器 -》BOM

// 浏览器加载页面   ： 简单操作系统
// 1. 输入网址 www.baidu.com
// 2. 网址转化为IP地址： 服务器 -》 IP  10.10.10.10
//       域名： www.baidu.com
//       DNS服务器
// 3. 浏览器收到IP地址，映射关系缓存在本地
// 4. 浏览器像http://www.baidu.com 请求
//    http https    浏览器  -》服务器
// 5. 服务器收到请求http://www.baidu.com:80
//      端口
// 6. 服务器处理请求，返回给浏览器
// 7. 浏览器收到内容 -》解析
// 8. 看到页面

// 浏览器 ： 多线程
// 1. js引擎
// 2， UI渲染
// 3. 事件线程
// 4. 发起请求的线程
// 5. 定时器的线程
// .... 

// JS -> 单线程 编程方便
// 只有一个线程可处理JS的事件，需要排队

// 同步任务：按顺序执行
// 异步任务：部分任务提前处理，然后再执行

// js  时间线
// 第一阶段：载入阶段loading  默认：同步
//     1. 获取页面内容2.html -》解析
//     2. DOM树：html
//                 Head
//                     Script 
//     3. 同步： js脚本 下载
//             js解释器 脚本解析 执行
//     4. 继续解析DOM树
//     。。。
//     5. 解析完成
//     6.渲染 -》文件下载 图片
//     7. 载入阶段结束
// 第二阶段： 事件阶段 onload 异步
//获取节点
var n=document.getElementById("div1");
console.log(n);
// 延迟加载
// 异步加载